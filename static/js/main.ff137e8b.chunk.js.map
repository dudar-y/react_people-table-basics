{"version":3,"sources":["App.tsx","pages/ErrorPage.tsx","pages/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx/PersonLink.tsx","components/PeopleList.tsx/PeopleList.tsx","pages/PeoplePage.tsx","helpers/getParents.ts","index.tsx","Root.tsx"],"names":["getLinkClass","isActive","cn","App","className","role","to","ErrorPage","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","name","born","died","fatherName","father","motherName","mother","sex","slug","isPersonSelected","useParams","personSlug","isWomen","PeopleList","people","map","PeoplePage","useState","setPeople","isError","setIsError","isLoading","setIsLoading","useEffect","peopleFromServer","newPerson","find","getParents","catch","finally","isAnyPerson","length","isShow","peopleList","noPeopleNotification","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.ff137e8b.chunk.js","sourcesContent":["import { Outlet, NavLink } from 'react-router-dom';\nimport cn from 'classnames';\nimport './App.scss';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => cn(\n  'navbar-item', { 'has-background-grey-lighter': isActive },\n);\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import React from 'react';\n\nexport const ErrorPage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    born,\n    died,\n    fatherName,\n    father,\n    motherName,\n    mother,\n    sex,\n    slug,\n  } = person;\n\n  const { personSlug } = useParams();\n\n  const isPersonSelected = personSlug === slug;\n\n  const isWomen = sex === 'f';\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': isPersonSelected })}\n    >\n      <td>\n        <Link\n          className={cn({ 'has-text-danger': isWomen })}\n          to={`../${slug}`}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      { mother && (\n        <td>\n          <Link\n            className=\"has-text-danger\"\n            to={`../${mother.slug}`}\n          >\n            {mother.name}\n          </Link>\n        </td>\n      )}\n\n      { !mother && motherName && (\n        <td>{motherName}</td>\n      )}\n\n      { !mother && !motherName && (\n        <td>-</td>\n      )}\n\n      { father && (\n        <td>\n          <Link\n            to={`../${father.slug}`}\n          >\n            {father.name}\n          </Link>\n        </td>\n      )}\n\n      { !father && fatherName && (\n        <td>{fatherName}</td>\n      )}\n\n      { !father && !fatherName && (\n        <td>-</td>\n      )}\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink.tsx/PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleList: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonLink person={person} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleList } from '../components/PeopleList.tsx/PeopleList';\nimport { getParents } from '../helpers/getParents';\nimport { Person } from '../types';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then((peopleFromServer) => {\n        setPeople(getParents(peopleFromServer));\n      })\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const isAnyPerson = people.length > 0;\n\n  const isShow = {\n    peopleList: !isLoading && !isError && isAnyPerson,\n    noPeopleNotification: !isAnyPerson && !isLoading && !isError,\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          { isLoading && <Loader /> }\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isShow.noPeopleNotification && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isShow.peopleList\n          && <PeopleList people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport function getParents(people: Person[]) {\n  const peopleWithParents = people.map((person) => {\n    const newPerson = { ...person };\n\n    newPerson.father = people\n      .find(father => father.name === newPerson.fatherName);\n\n    newPerson.mother = people\n      .find(mother => mother.name === newPerson.motherName);\n\n    return newPerson;\n  });\n\n  return peopleWithParents;\n}\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    Root(),\n  );\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport { App } from './App';\nimport { ErrorPage } from './pages/ErrorPage';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\">\n          <Route path=\":personSlug?\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<ErrorPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n"],"sourceRoot":""}